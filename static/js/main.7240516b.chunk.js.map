{"version":3,"sources":["components/Timeline.js","components/Segments.js","scripts.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["formatTime","time","Math","round","minutes","floor","seconds","css","Timeline","props","showPreview","index","setState","hoverPreview","state","bind","this","videoTime","duration","className","Progress","percent","color","React","Component","Segments","handleKey","key","jumpVideo","current_idx","new_idx","console","log","current_level","starts","mid_indexes","len","length","speech","speak","text","mid_contents","toString","then","catch","e","error","test_idx","dynamic","align_segment","Speech","hasBrowserSupport","init","voices","data","segment_starts","closest_past","max","apply","filter","x","closest_index","findIndex","closest_mid_past","closest_mid_index","videoID","contents","current_mid_idx","handleKeys","onKeyEvent","slice","map","mid_index","idx","onClick","searchWords","autoEscape","textToHighlight","tokenized_subtitle","split","i","indexOf","splice","includes","joined","join","current_state","entered_time","clips","title","image","Home","handleProgress","handleDuration","ref","player","handleDrawerOpen","open","handleDrawerClose","string","arr","parseInt","deformatTime","playing","inspectFrame","playbackRate","modalOpen","hover","message","listening","transcript","handleSubmit","onTimeChange","json","require","l","node","push","sortable","frame","sort","a","b","frame_indexes","frame_timestamps","start","url","navigations","bookmarks","current_query","suggestions","option_suggestions","option_indexes","time_options","content_options","keyword_indexes","abs","seekTo","playedSeconds","event","value","newTime","replace","substr","curr","diff","newdiff","closest_frame_index","objects","Object","keys","object_info","object","y","Header","as","IconButton","aria-label","style","fontSize","Drawer","classes","paper","classNames","anchor","Divider","clip","Button","width","paddingTop","paddingBottom","src","height","position","Container","tabIndex","marginTop","alt","Row","id","controls","onPause","_onPause","onPlay","_onPlay","onReady","_onReady","onProgress","onDuration","onSeek","_onSeek","onListenHandler","onChange","border","padding","borderRadius","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7240516b.chunk.js","sourcesContent":["import React from \"react\";\nimport '../App.css';\nimport {Progress} from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Clickable } from 'react-clickable';\nimport { css } from \"@emotion/react\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\n\nfunction formatTime(time) {\n    time = Math.round(time);\n  \n    var minutes = Math.floor(time / 60),\n        seconds = time - minutes * 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    return minutes + \":\" + seconds;\n}\n\n  const override = css`\n  position: absolute;\n  font-size: 5px;\n  height: 5px;\n  left: 69vw; \n  margin-top: -3.8vh;\n`;\n\n\n\nexport default class Timeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hoverPreview: false,\n        };\n\n        this.showPreview = this.showPreview.bind(this);\n    }\n\n   \n\n\n    showPreview = (index) => {\n        this.setState({hoverPreview: index});\n    }\n\n\n\n    render() {\n        const { videoTime, duration} = this.props;\n        const { showPreview } = this;\n        return (\n            <div className=\"progressBar-container\">\n                <div className=\"progressBar\">\n                    <Progress percent={Math.floor(videoTime/duration*100)}color='light-grey' />\n                    <div className=\"time-progress\">{formatTime(videoTime)}</div>\n                </div>\n            </div>\n        );\n    }};","import React from \"react\";\nimport '../App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Clickable } from 'react-clickable';\nimport Highlighter from \"react-highlight-words\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport Speech from \"speak-tts\";\n\n\n\n\nfunction formatTime(time) {\n    time = Math.round(time);\n    var minutes = Math.floor(time / 60),\n        seconds = time - minutes * 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    return minutes + \":\" + seconds;\n}\n\n\n\n\nexport default class Segments extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hoverPreview: false,\n            current_level: 0,\n            test_idx: 0\n        };\n\n        this.handleKey = this.handleKey.bind(this);\n        this.align_segment = this.align_segment.bind(this);\n    }\n\n    componentDidMount() {\n      const speech = new Speech();\n        if(speech.hasBrowserSupport()) { // returns a boolean\n            console.log(\"speech synthesis supported\")\n        }\n        speech.init({\n            'volume': 1,\n             'lang': 'en-GB',\n             'rate': 1.3,\n             'pitch': 1,\n             'voice':'Google UK English Male',\n             'splitSentences': true,\n             'listeners': {\n                 'onvoiceschanged': (voices) => {\n                     console.log(\"Event voiceschanged\", voices)\n                 }\n             }}).then((data) => {\n            // The \"data\" object contains the list of available voices and the voice synthesis params\n            console.log(\"Speech is ready, voices are available\", data)\n        }).catch(e => {\n            console.error(\"An error occured while initializing : \", e)\n        })\n        this.setState({speech: speech});\n    }\n    static getDerivedStateFromProps(props, current_state) {\n      if (current_state.entered_time !== props.entered_time) {\n        if(!current_state.speech) return;\n\n        var closest_past = Math.max.apply(Math, props.starts.filter(function(x, index){return x <= props.entered_time}));\n        var closest_index = props.starts.findIndex( x => x == closest_past );\n        var closest_mid_past = Math.max.apply(Math, props.mid_indexes.filter(function(x){return x <= closest_index + 1}));\n        var closest_mid_index = props.mid_indexes.findIndex( x => x == closest_mid_past );\n        closest_mid_index = closest_mid_index < 0? 0: closest_mid_index;\n        current_state.speech.speak({\n            text: props.mid_contents[closest_mid_index]\n        }).then(() => {\n            console.log(\"Success !\")\n        }).catch(e => {\n            console.error(\"An error occurred :\", e)\n        })\n        current_state.entered_time = props.entered_time;\n        current_state.current_level = 1;\n      }\n      return null\n    }\n\n\n    handleKey = (key, jumpVideo, current_idx) => {\n      console.log(key, current_idx, this.state.current_level);\n      var new_idx;\n      if(this.state.current_level === 1){\n        switch (key) {\n          case 'left':\n            new_idx = current_idx <= 0? 0 : current_idx-1;\n            var time = this.props.starts[this.props.mid_indexes[new_idx]];\n            jumpVideo(time, true);\n            break;\n          case 'right':\n            new_idx = current_idx === len? current_idx : current_idx+1;\n            var len = this.props.mid_indexes.length;\n            var time = this.props.starts[this.props.mid_indexes[new_idx]];\n            console.log(time);\n            jumpVideo(time, true);\n            break;\n          case 'down':\n            this.setState({current_level: 0});\n            return;\n        }\n        this.state.speech.speak({\n            text: this.props.mid_contents[new_idx].toString()\n        }).then(() => {\n            console.log(\"Success !\")\n        }).catch(e => {\n            console.error(\"An error occurred :\", e)\n        })\n      }\n      else{\n        switch (key) {\n          case 'left':\n            new_idx = current_idx-1;\n            var time = this.props.starts[new_idx];\n            this.state.speech.speak({\n                text: \"Go back\" + (this.props.starts[current_idx] - time).toString() +\"seconds\"\n            }).then(() => {\n                console.log(\"Success !\")\n            }).catch(e => {\n                console.error(\"An error occurred :\", e)\n            })\n            jumpVideo(time, true);\n            current_idx = new_idx;\n            break;\n          case 'right':\n            //new_idx = current_idx + 1;\n            new_idx = this.state.test_idx + 1;\n            var time = this.props.starts[new_idx];\n            this.state.speech.speak({\n                text: \"Skipped\" + (this.props.starts[new_idx] - this.props.starts[current_idx]).toString() + \"seconds\"\n            }).then(() => {\n                console.log(\"Success !\")\n            }).catch(e => {\n                console.error(\"An error occurred :\", e)\n            })\n            this.state.speech.speak({\n                text: this.props.dynamic[new_idx].toString()\n            }).then(() => {\n                console.log(\"Success !\")\n            }).catch(e => {\n                console.error(\"An error occurred :\", e)\n            })\n            jumpVideo(time, true);\n            current_idx = new_idx;\n            this.state.test_idx = current_idx;\n            break;\n          case 'up':\n            this.state.speech.speak({\n                text: \"scene level\"\n            }).then(() => {\n                console.log(\"Success !\")\n            }).catch(e => {\n                console.error(\"An error occurred :\", e)\n            })\n            this.setState({current_level: 1});\n            return;\n        }\n      }\n    }\n\n    align_segment(time, segment_starts, mid_indexes) {\n      time = Math.round(time);\n      time = !time ? 0 : time;\n      var closest_past = Math.max.apply(Math, segment_starts.filter(function(x, index){return x <= time}));\n      var closest_index = segment_starts.findIndex( x => x == closest_past );\n      var closest_mid_past = Math.max.apply(Math, mid_indexes.filter(function(x){return x <= closest_index + 1}));\n      var closest_mid_index = mid_indexes.findIndex( x => x == closest_mid_past );\n      console.log(closest_mid_past,  closest_mid_index);\n      closest_index = closest_index < 0? 0 : closest_index;\n      closest_mid_index = closest_mid_index < 0? 0: closest_mid_index;\n      return [closest_index, closest_mid_index];\n    }\n\n\n    render() {\n        const { videoID, videoTime, jumpVideo, starts, contents, mid_indexes, mid_contents, dynamic} = this.props;\n        const { current_level } = this.state;\n        const [current_idx, current_mid_idx] = this.align_segment(videoTime, starts, mid_indexes);\n        if (current_level === 1){\n          return(\n            <div className=\"segments-container\">\n              <KeyboardEventHandler\n                handleKeys={['left', 'up', 'right', 'down']}\n                onKeyEvent={(key, e) => this.handleKey(key, jumpVideo, current_mid_idx)} />\n                {mid_indexes.slice(current_mid_idx, current_mid_idx + 4).map((mid_index, idx) => {\n                    var keywords = []\n                    return(\n                      <Clickable onClick={() => this.onClick(mid_index-1)}>\n                      <div className=\"mid-text-option-item\">\n                        <div className=\"text-option-text\">\n                          <div className=\"text-option-meta\">\n                            <div className=\"time-option\">\n                            {formatTime(starts[mid_index-1])} \n                            </div>\n                          </div>\n                          <div className=\"text-option\">\n                          <Highlighter\n                              searchWords={keywords}\n                              autoEscape={true}\n                              textToHighlight={mid_contents[current_mid_idx + idx]}\n                          />\n                          </div>\n                        </div>\n                      </div>\n                      </Clickable>  )\n                     })}\n                    \n            </div>)\n        }\n        \n        return (\n            <div className=\"segments-container\">\n              <KeyboardEventHandler\n                handleKeys={['left', 'up', 'right', 'down']}\n                onKeyEvent={(key, e) => this.handleKey(key, jumpVideo, current_idx)} />\n                {starts.slice(current_idx, current_idx + 4).map((time, idx) => {\n                    var index = current_idx + idx;\n                    var keywords = []\n                    var tokenized_subtitle = contents[index].split(\" \")\n                    var i = tokenized_subtitle.indexOf(\"\");\n                    if (i !== -1) tokenized_subtitle.splice(i, 1);\n                    if (contents[index].length > 160 && !contents[index].includes('...') ){\n                      var joined = tokenized_subtitle.join(' ');\n                      contents[index] = joined;\n                    }\n                    return(\n                      <Clickable onClick={() => this.onClick(index)}>\n                      <div className=\"text-option-item\">\n                        <div className=\"text-option-text\">\n                          <div className=\"text-option-meta\">\n                            <div className=\"time-option\">\n                            {formatTime(time)} \n                            </div>\n                          </div>\n                          <div className=\"text-option\">\n                          <Highlighter\n                              searchWords={keywords}\n                              autoEscape={true}\n                              textToHighlight={contents[index]}\n                          />\n                          </div>\n                        </div>\n                      </div>\n                      </Clickable> )\n                     })}\n            </div>\n        );\n    }};","const clips = [ \n    {\n        title: 'Makeup Tutorial',\n        image: '/cake.png',\n        videoID: 'cYc7D9n8R0U',\n    },\n    {\n        title: 'Short Film',\n        image: '/buns.png',\n        videoID: 'awCBK_2ZQhU',\n    },\n]\n\n\n\nexport { clips };","import React, { Component } from 'react';\nimport ReactPlayer from 'react-player'\nimport { Header, Button, Image, Message } from 'semantic-ui-react';\nimport classNames from 'classnames';\nimport '../App.css';\nimport Timeline from './Timeline';\nimport Segments from './Segments';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport {clips} from '../scripts';\nimport { Clickable } from 'react-clickable';\nimport Blink from 'react-blink-text';\nimport TimeField from 'react-simple-timefield';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport Speech from \"speak-tts\";\n\n\nfunction formatTime(time) {\n    console.log(time);\n    time = Math.round(time);\n    var minutes = Math.floor(time / 60),\n        seconds = time - minutes * 60;\n    \n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    var time = minutes + \":\" + seconds;\n    if(time.length < 5)\n        time = 0 + time;\n    return time;\n}\n\nfunction deformatTime(string) {\n    const arr = string.split(':');\n    var minutes = parseInt(arr[0]) * 60;\n    var seconds = parseInt(arr[1]);\n    return minutes + seconds;\n}\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playing: false,\n            playbackRate: 1.0,\n            modalOpen: true,\n            hover: false,\n            message: false,\n            videoID: 'GMVbQ1UsMP8',\n            listening: false,\n            transcript:'',\n            time: '00:00',\n            starts: [], \n            mid_indexes: [],\n        }\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.jumpVideo  = this.jumpVideo.bind(this);\n        this.onTimeChange = this.onTimeChange.bind(this);\n        this.handleKey = this.handleKey.bind(this);\n        this.inspectFrame = this.inspectFrame.bind(this);\n    }\n\n\n    componentDidMount() {\n        const speech = new Speech();\n        if(speech.hasBrowserSupport()) { // returns a boolean\n            console.log(\"speech synthesis supported\")\n        }\n        speech.init({\n            'volume': 1,\n             'lang': 'en-GB',\n             'rate': 0.8,\n             'pitch': 1,\n             'voice':'Google US English',\n             'splitSentences': true,\n             'listeners': {\n                 'onvoiceschanged': (voices) => {\n                     console.log(\"Event voiceschanged\", voices)\n                 }\n             }}).then((data) => {\n            // The \"data\" object contains the list of available voices and the voice synthesis params\n            console.log(\"Speech is ready, voices are available\", data)\n        }).catch(e => {\n            console.error(\"An error occured while initializing : \", e)\n        })\n        this.setState({speech: speech});\n\n        var json = require('../GMVbQ1UsMP8.json');\n        var starts = [];\n        var contents = [];\n        for (var i = 0, l = json.length; i < l; i++) {\n        var node = json[i];\n        starts.push(node['start']);\n        contents.push(node['content']);\n        }\n\n        json = require('../mid_level.json');\n        var mid_indexes = [];\n        var mid_contents = [];\n        for (var i = 0, l = json.length; i < l; i++) {\n            node = json[i];\n            mid_indexes.push(node['index']);\n            mid_contents.push(node['content']);\n        }\n\n        json =  require('../dynamic.json');\n        var dynamic=[];\n        for (var i = 0, l = json.length; i < l; i++) {\n            node = json[i];\n            dynamic.push(node['content']);\n        }\n\n        \n        json = require('../frames_data.json');\n        var sortable = [];\n        for (var frame in json) {\n            sortable.push([frame, json[frame]['time']]);\n        }\n        sortable.sort(function(a, b) {\n            return a[1] - b[1];\n        });\n        // console.log(sortable);\n        var frame_indexes = []\n        var frame_timestamps = []\n        for (var i = 1, l = sortable.length; i < l; i++) {\n            frame_indexes.push(sortable[i][0]);\n            frame_timestamps.push(sortable[i][1]);\n        }\n\n        this.setState({starts: starts, contents:  contents, mid_indexes: mid_indexes, mid_contents: mid_contents,frame_indexes: frame_indexes, frame_timestamps:  frame_timestamps,  dynamic: dynamic});\n\n    }\n\n\n    handleProgress = state => {\n      // We only want to update time slider if we are not currently seeking\n      this.setState(state);\n    }\n  \n    handleDuration = (duration) => {\n      this.setState({ duration });\n    }\n\n    ref = player => {\n        this.player = player;\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSubmit(videoID) {\n        this.setState({start: 0, videoID: videoID, url: '', navigations: [], bookmarks: [],\n          current_query: '',\n          playing: true,\n          transcript: '',\n          suggestions: [],\n          option_suggestions: [],\n          option_indexes: [],\n          time_options: [],\n          content_options: [],\n          keyword_indexes: [],\n        })\n        console.log(\"changed the video\", videoID);\n        this.handleDrawerClose();\n    }\n\n    jumpVideo(time, abs=false){\n        if(abs){\n            this.player.seekTo(time);\n        }\n        else{\n            this.player.seekTo(this.state.playedSeconds + time);\n        }\n       \n    }\n\n    onTimeChange(event, value) {\n        const newTime = value.replace(/-/g, ':');\n        const time = newTime.substr(0, 5);\n        console.log(newTime, time);\n    \n        this.setState({time});\n    }\n    handleKey = (key) => {\n        console.log(key, this.state.time);\n        var time = deformatTime(this.state.time);\n        switch (key) {\n        case 'enter':\n            this.jumpVideo(time, true);\n            this.setState({entered_time: time});\n            break;\n        case 'space':\n            this.setState({playing: !this.state.playing});\n            break;\n        case 'tab':\n            this.inspectFrame();\n        case 'w':\n            this.jumpVideo(time, true);\n            this.setState({entered_time: time});\n            break;\n        }\n    }\n\n    inspectFrame() {\n        const {frame_indexes, frame_timestamps, playedSeconds} = this.state;\n        var curr = frame_timestamps[0], diff = Math.abs(playedSeconds - curr);\n        var index = 0;\n        for (var i = 0; i < frame_timestamps.length; i++) {\n            var newdiff = Math.abs(playedSeconds - frame_timestamps[i]);\n            if (newdiff < diff) {\n                diff = newdiff;\n                curr = frame_timestamps[i];\n                index = i;\n            }\n        }\n        var closest_frame_index = frame_indexes[index];\n        var json = require('../frames_data.json');\n        var objects = json[closest_frame_index]['objects'];\n        console.log(\"here\", objects);\n        if (!Object.keys(objects).length){\n            this.state.speech.speak({\n                text: \"No object detected\"\n            }).then(() => {\n                console.log(\"Success !\")\n            }).catch(e => {\n                console.error(\"An error occurred :\", e)\n            })\n        }\n        else{\n            var object_info =  ''\n            for (var object in objects) {\n                object_info = '  ' + object_info + object + '   width' + (Math.floor(objects[object]['width']*100/1920)).toString() + ' %' + ' height' + (Math.floor(objects[object]['height']*100/1080)).toString() + ' % at';\n                var x = objects[object]['left_x'] + objects[object]['width']/2;\n                var y = objects[object]['top_y'] + objects[object]['height']/2;\n                if (y<360){\n                    object_info = object_info + ' top'\n                }\n                else if (y<720){\n                    if (x<1280){\n                        object_info = object_info + 'center'\n                        continue;\n                    }\n                    object_info = object_info + ' middle'\n                }\n                else{\n                    object_info = object_info + ' bottom'\n                }\n\n                if (x<640){\n                    object_info = object_info + 'left'\n                }\n                else if (x<1280){\n                    object_info = object_info + 'middle'\n                }\n                else{\n                    object_info = object_info + 'right'\n                }\n            }\n        \n            // this.state.speech.speak({\n            //     text: \"Detected\" + object_info\n            // }).then(() => {\n            //     console.log(\"Success !\")\n            // }).catch(e => {\n            //     console.error(\"An error occurred :\", e)\n            // })\n            this.state.speech.speak({\n                text: \"Detected: Teacher Monica. On the left of screen. Banana plant. On the right to the Teacher Monica. Size is similar to the teacher monica.\"\n            }).then(() => {\n                console.log(\"Success !\")\n            }).catch(e => {\n                console.error(\"An error occurred :\", e)\n            })\n            // this.state.speech.speak({\n            //     text: \"Detected 7 books. Book 1. Bintou's braids. On the cover, are the birds and a girl. Book 2. The amazing octupus. Book 3. Plant. On the covr is a sunflower. Book 4. Penguin. On the cover is a penguin head. \" \n            // }).then(() => {\n            //     console.log(\"Success !\")\n            // }).catch(e => {\n            //     console.error(\"An error occurred :\", e)\n            // })\n        }\n    }\n    \n    \n    \n    render() {\n        const { videoID, playing, playbackRate, listening, transcript, } = this.state;\n\n        return (\n            <div className=\"Home\">\n                <KeyboardEventHandler\n                    handleKeys={['space', 'tab']}\n                    onKeyEvent={(key, e) => this.handleKey(key)}>\n                </KeyboardEventHandler>\n                <div className=\"header-bar\">\n                    <div className=\"header-title\">\n                        <Header as=\"h2\">\n                            Video A11y\n                        </Header>\n                    </div>   \n                    <IconButton\n                        aria-label=\"Open drawer\"\n                        onClick={this.handleDrawerOpen}>\n                        <MenuIcon style={{ fontSize: '30px'}}/>\n                    </IconButton>\n                    <Drawer\n                        classes={{\n                            paper: classNames(\"drawerPaper\", !this.state.open && \"drawerPaperClose\"),\n                        }}\n                        open={this.state.open} anchor=\"right\" >\n                        <div>\n                            <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronRightIcon />\n                            </IconButton>\n                        </div>\n                        <Divider />\n                        {clips.map((clip, index) => (\n                            <div key={index}>\n                            <Button style={{ fontSize: '12px', width: '100%', paddingTop: '10%', paddingBottom: '12%' }} key={clip}\n                                onClick={() => this.handleSubmit(clip.videoID)}>\n                                <img src={clip.image} style={{width: '70%', height: '70%', }} />\n                                <div style={{ position: 'absolute' }}>\n                                {clip.title}\n                                </div>\n                            </Button>\n                            </div>\n                        ))}\n                    </Drawer>\n                </div>\n                <Container className=\"upper-page\">\n                <div className=\"split-left\"  tabIndex=\"1\" >\n                        <img src={\"space-bar-icon-25.png\"} style={{width: '50%', marginTop: '3vh'}} alt={\"Icon of up, down, left, right keys from keyboard\"}/>\n                        <div className=\"text-option-text\">\n                            ⬆/⬇: Change level of unit<br/>\n                            ⬅: Jump to nearest past unit<br/>\n                            ⬅: Jump to nearest future unit\n                        </div>\n                </div>\n                <div className=\"split-center\"  tabIndex=\"1\" >\n                    <Row className=\"main-video\">\n                        <ReactPlayer ref={this.ref} playing={this.state.playing}\n                            playbackRate={playbackRate} id=\"video\"  width=\"100%\" height=\"100%\" controls url = {`https://www.youtube.com/watch?v=${videoID}`} onPause={this._onPause}\n                            onPlay={this._onPlay}\n                            onReady={this._onReady}\n                            onProgress={this.handleProgress}\n                            onDuration={this.handleDuration}\n                            onSeek={this._onSeek}>\n                        </ReactPlayer>\n                    </Row>\n                    <div className=\"container-wrapper\">\n                        <div className=\"container-transcript\">\n                            {!listening? <div className=\"sys-instruction\">Click below to start talking!</div> :\n                            transcript? <div className=\"sys-instruction\">You said: </div>\n                            : <Blink color='black' text='Say something to the system!' fontSize='70'/> }\n                            <div className=\"text-option\">\n                            {transcript}\n                            </div>\n                            <br/>\n                            <Clickable  className=\"voice-button\" onClick={this.onListenHandler}>\n                                {listening? <div className=\"voice-command\">\"Stop Talking\"</div>\n                                :<div className=\"voice-command\">\"Start Talking\"</div>}\n                            </Clickable>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"split-right\" >\n                    <KeyboardEventHandler\n                    handleKeys={['w']}\n                    onKeyEvent={(key, e) => this.handleKey(key)}>\n                    {/* <div className=\"search-bar-top\">\n                        <div className=\"last-command\">{this.state.last_query}</div>\n                    </div>\n                    <form onSubmit={this.onRequestSearchHandler}>\n                        <input type=\"text\" className=\"search-bar\"/>\n                    </form> */}\n                    <div className=\"text-option-text\"> Jump to: </div>\n                    <TimeField\n                        value={formatTime(this.state.playedSeconds)} onChange={this.onTimeChange}\n                        style={{ border: '2px solid #666', fontSize: 42, width: 130,\n                        padding: '5px 8px', color: '#333', borderRadius: 5}}\n                    />\n                    </KeyboardEventHandler>\n\n\n                </div>    \n                </Container>\n                <Container className=\"lower-page\">\n\n                <Timeline   videoTime={this.state.playedSeconds} duration={this.state.duration} ></Timeline>\n                <Segments videoID={this.state.videoID} videoTime={this.state.playedSeconds} jumpVideo = {this.jumpVideo} starts =  {this.state.starts} contents = {this.state.contents} mid_indexes = {this.state.mid_indexes} mid_contents = {this.state.mid_contents} entered_time = {this.state.entered_time} dynamic = {this.state.dynamic}></Segments>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default Home;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home'\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    \n    return (\n      <Router>\n          <Route exact path=\"/\" component={Home}></Route>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}